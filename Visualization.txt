Visualization
Appendix  D
pip3 install matplotlib
pip3 install pandas 
pip3 install seaborn
pip3 install plotnine
pip3 install s3fs
pip3 install boto3
import io
import matplotlib.pyplot as plt
import s3fs
import numpy as np
import seaborn as sns
sample_df=sdf.select(['prior_close']).sample(False,0.5,42)
pandas_df=sample_df.toPandas()
sns.displot(pandas_df)     
import matplotlib.pyplot as plt


#Data plots
file_path="s3://ballballball/stocks_daliy.tsv"
model_path="stock_logistic_regression_mode"
df=daily_stocks.where(col("higher_close")=1).groupby("higher_close")\.count().toPandas()


>>> myModel = LogisticRegressionModel.load(model_path)
sdf.printSchema()
df = pd.DataFrame(np.random.randint(1, 7, 6000), columns=['close'])
df['two'] = df['close'] + np.random.randint(1, 7, 6000)
df = spark.toPandas(df)
myplot=sdf.plot.bar('higher_close','count')
# test best model, count coefficient, around 12. But take long time, it failed 
>>> evaluator = BinaryClassificationEvaluator(metricName="areaUnderROC")
>>> cv = CrossValidator(estimator=lr, estimatorParamMaps=grid, evaluator=evaluator)
>>> cv = CrossValidator(estimator=lr, estimatorParamMaps=grid, evaluator=evaluator)
>>> all_models = cv.fit(trainingData)
# make plots to see output 
plt.rcParams["figure.figsize"] = [7.50, 3.50]
plt.rcParams["figure.autolayout"] = True


data = {'higher_close': 10, 'prior_close': 15}
names = list(data.keys())
values = list(data.values())
fig, axs = plt.subplots(1, 3)


axs[0].bar(names, values)
axs[1].scatter(names, values)
axs[2].plot(names, values)
plt.show()
# plot
>>> plt.plot
<function plot at 0x7f4b601ea710>
>>> img_data=io.BytesIO()